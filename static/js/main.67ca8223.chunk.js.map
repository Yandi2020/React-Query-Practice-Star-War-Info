{"version":3,"sources":["components/Navbar.js","components/Planet.js","components/Planets.js","components/Person.js","components/People.js","App.js","index.js"],"names":["Navbar","setPage","onClick","Planet","planet","className","name","population","terrain","fetchPlanets","page","a","fetch","res","json","Planets","useState","useQuery","keepPreviousData","isLoading","isError","error","data","isPreviousData","message","old","Math","max","disabled","next","results","map","Person","person","gender","birth_year","fetchPeople","People","status","queryClient","QueryClient","App","QueryClientProvider","client","initialIsOpen","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAWeA,EATA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChB,OACE,gCACE,wBAAQC,QAAS,kBAAMD,EAAQ,YAA/B,qBACA,wBAAQC,QAAS,kBAAMD,EAAQ,UAA/B,wB,+BCJS,SAASE,EAAT,GAA6B,IAAXC,EAAU,EAAVA,OAC7B,OACI,sBAAKC,UAAU,OAAf,UACI,6BAAKD,EAAOE,OACZ,8CAAiBF,EAAOG,cACxB,2CAAcH,EAAOI,cCHjC,IAAMC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACDC,MAAM,sCAAwCF,GAD7C,cACbG,EADa,yBAEZA,EAAIC,QAFQ,2CAAH,sDA4CHC,EAvCC,WAAO,IAAD,EACIC,mBAAS,GADb,mBACbN,EADa,KACPT,EADO,OAGwCgB,YAC1D,CAAC,UAAWP,IACZ,kBAAMD,EAAaC,KACnB,CAAEQ,kBAAmB,IAHfC,EAHY,EAGZA,UAAWC,EAHC,EAGDA,QAASC,EAHR,EAGQA,MAAOC,EAHf,EAGeA,KAHf,EAGqBC,eAMzC,OACE,gCACE,yCAEEJ,EACA,mDACEC,EACF,0CAAaC,EAAMG,WAEnB,qCACE,wBACEtB,QAAS,kBAAMD,GAAQ,SAAAwB,GAAG,OAAIC,KAAKC,IAAIF,EAAM,EAAG,OAChDG,SAAmB,IAATlB,EAFZ,2BAIA,+BAAQA,IACR,wBACER,QAAS,kBAAMD,GAAQ,SAAAwB,GAAG,OAAKH,EAAKO,KAAOJ,EAAM,EAAIA,MACrDG,UAAWN,EAAKO,KAFlB,uBAKA,8BACIP,EAAKQ,QAAQC,KAAI,SAAA3B,GAAM,OAAI,cAACD,EAAD,CAA0BC,OAAQA,GAArBA,EAAOE,kBCrC9C,SAAS0B,EAAT,GAA6B,IAAXC,EAAU,EAAVA,OAC7B,OACI,sBAAK5B,UAAU,OAAf,UACI,6BAAM4B,EAAO3B,OACb,0CAAc2B,EAAOC,UACrB,8CAAkBD,EAAOE,iBCFrC,IAAMC,EAAW,uCAAG,4BAAAzB,EAAA,sEACAC,MAAM,gCADN,cACZC,EADY,yBAEXA,EAAIC,QAFO,2CAAH,qDA4BFuB,EAvBA,WAAO,IAAD,EACMpB,YAAS,SAAUmB,GAApCd,EADW,EACXA,KAAMgB,EADK,EACLA,OAEd,OACE,gCACE,wCACY,YAAXA,GACC,mDAGU,UAAXA,GACC,sDAGU,YAAXA,GACC,8BACIhB,EAAKQ,QAAQC,KAAI,SAAAE,GAAM,OAAI,cAACD,EAAD,CAA0BC,OAAQA,GAArBA,EAAO3B,eClBrDiC,EAAc,IAAIC,IAqBTC,MAnBf,WAAgB,IAAD,EACSzB,mBAAS,WADlB,mBACRN,EADQ,KACFT,EADE,KAGb,OACE,eAACyC,EAAA,EAAD,CAAqBC,OAAQJ,EAA7B,UACE,sBAAKlC,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CAAQJ,QAASA,IAEjB,qBAAKI,UAAU,UAAf,SACa,YAATK,EAAqB,cAAC,EAAD,IAAc,cAAC,EAAD,SAIzC,cAAC,IAAD,CAAoBkC,eAAe,QCnBzCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.67ca8223.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navbar = ({ setPage }) => {\n  return ( \n    <nav>\n      <button onClick={() => setPage('planets')}>Planets</button>\n      <button onClick={() => setPage('chars')}>People</button>\n    </nav>\n  );\n}\n \nexport default Navbar;","import React from 'react'\n\nexport default function Planet({ planet }) {\n    return (\n        <div className='card'>\n            <h3>{planet.name}</h3>\n            <p>Population - {planet.population}</p>\n            <p>Terrain - {planet.terrain}</p>\n        </div>\n    )\n}\n\n\n","import React, { useState } from 'react';\nimport { useQuery } from 'react-query'\nimport Planet from './Planet'\n\nconst fetchPlanets = async (page) => { \n  const res = await fetch('http://swapi.dev/api/planets/?page=' + page);\n  return res.json();\n}\n\nconst Planets = () => {\n  const [page, setPage] = useState(1);\n\n  const { isLoading, isError, error, data, isPreviousData } = useQuery(\n    ['planets', page], \n    () => fetchPlanets(page), \n    { keepPreviousData : true }\n  );\n\n  return (\n    <div>\n      <h2>Planets</h2>\n\n      { isLoading ? (\n        <div>Loading data ...</div>\n      ) : isError ? (\n        <div>Error: {error.message}</div>\n      ) : (\n        <>\n          <button \n            onClick={() => setPage(old => Math.max(old - 1, 1))}\n            disabled={page === 1}\n          >Previous Page</button>\n          <span>{ page }</span>\n          <button \n            onClick={() => setPage(old => (data.next ? old + 1 : old))}\n            disabled={!data.next}\n          >Next Page</button>\n\n          <div>\n            { data.results.map(planet => <Planet key={planet.name} planet={planet}/>) }\n          </div>\n        </>\n      )}\n\n    </div>\n  );\n}\n\nexport default Planets;\n\n","import React from 'react'\n\nexport default function Person({ person }) {\n    return (\n        <div className=\"card\">\n            <h3>{ person.name }</h3>\n            <p>Gender - { person.gender }</p>\n            <p>Birth year - { person.birth_year }</p>\n        </div>\n    );\n}\n","import React from 'react';\nimport { useQuery } from 'react-query'\n\nimport Person from './Person'\n\nconst fetchPeople = async() => {\n  const res = await fetch('http://swapi.dev/api/people/');\n  return res.json();\n}\n\nconst People = () => {\n  const { data, status } = useQuery('people', fetchPeople);\n\n  return (\n    <div>\n      <h2>People</h2>\n      {status === 'loading' && (\n        <div>Loading data ...</div>\n      )}\n\n      {status === 'error' && (\n        <div>Error Fetching data</div>\n      )}\n\n      {status === 'success' && (\n        <div>\n          { data.results.map(person => <Person key={person.name} person={person}/>) }\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default People;","import React, { useState } from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { ReactQueryDevtools } from 'react-query/devtools'\n\nimport Navbar from './components/Navbar';\nimport Planets from './components/Planets';\nimport People from './components/People';\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  let [page, setPage] = useState('planets');\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <div className=\"App\">\n        <h1>Star Wars Info</h1>\n        <Navbar setPage={setPage} />\n        \n        <div className=\"content\">\n          { page === 'planets' ? <Planets /> : <People /> }\n        </div>\n      </div>\n\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}